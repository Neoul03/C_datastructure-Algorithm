/* [pointer_1.c(포인터가 가리키고 있는 값과 포인터 자체 값)]
int main() {
	char ch;
	char* p;

	ch = 'A';
	p = &ch;

	printf("ch가 가지고 있는 값: ch ==> %c \n", ch);
	printf("ch의 주소(address): &ch ==> %d \n", &ch);
	printf("p가 가지고 있는 값 : p ==> %d \n", p);
	printf("p가 가리키는 곳의 실제 값 *p ==> %c \n", *p);

	return 0;
}
*/

/* [pointer_2.c(배열과 포인터의 관계)]
int main() {
	char s[8] = "Basic-C";
	char* p;

	p = s;

	printf("&s[3] ==> %s\n", &s[3]);
	printf("p+3 ==> %s\n\n", p+3);

	printf("s[3] ==> %c\n", s[3]);
	printf("*(p+3) ==> %c\n", *(p + 3));

	return 0;
}
*/

/* [pointer_3.c(2차원 배열 값 할당, for문 1번만 써서 모든 원소 접근)]
int main(void) {
	int arr[3][5] = { 0 };
	int* ptr = NULL;
	int i = 0, j = 0, x = 0, y = 0;
	ptr = arr;

	for (i = 0; i < 3; i++) {
		for (j = 0; j < 5; j++) {
			*(ptr + i * 5 + j) = i * 5 + j;
		}
	}

	for (i = 0; i < 15; i++) {
		int x = i / 5;
		int y = i % 5;
		printf("arr[%d][%d] = %d\n", x, y, arr[x][y]);
	}
	
	return 0;
}
*/
